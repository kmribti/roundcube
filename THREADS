CHANGES IN RELATION TO ORIGINAL PATCH
    - don't add nested messages into selection on collapse if parent message
      is in selection
    - some changes in messages highlighting
    - re-written all changes in rcube_imap.php
    - temporary removed threads caching (see TODO)
    - use depth=0 for roots
    - thread expand state is not stored anywhere
    - removed imap_thread_algorithm option, we're using the best algorithm
      supported by server and implement REFS sorting in Roundcube
    - use underlined subject for root with unread children (icon is still supported)

CHANGES IN RELATION TO TRUNK (for pasting into CHANGELOG after merge)
    - removed 'index_sort' option, now we're using empty 'message_sort_col' for
      this purpose
    - popup menu for messages list column/sorting/view selection
    - added sorting by ARRIVAL
    - added sorting by CC

TODO:
    - threads caching,
    - performance: fetching all messages for list in "expand all" state only,
      if "expand all" is disabled we should fetch only root messages and fetch
      children on-demand (on expand button click),
      Notice: this is not so simple, because we need to fetch children
    	      to set "unread_children", but we can fetch only flags instead of
    	      all headers for each child
    - after message delete we shouldn't reload the whole list, only the thread
      in which the message was
    - button in #listcontrols to mark all messages in current thread (with selected
      root or child message),
    - "Expand All Unread" button
    - thread tree icons
    - update message_threading flag on folder rename/delete, also make sure
      that array is not growing infinite (remove non-existing items e.g. when
      listing the folders)
    - thread css: message row height, thread/status icon alignment
      (change size of all list icons to 14x14)
TODO (after merge):
    - remove 'indexsort' label from localization files
    - use jQuery.inArray instead of find_in_array() (common.js)

KNOWN ISSUES:
    - after message(s) deletion the whole list is reloaded (see TODO),
